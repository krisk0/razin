Installation
============

With portage package manager: 
 put python-sage-flint-20140310.ebuild into /your/private/overlay/dev-python/python-sage-flint
 
 move 20140310.zip to /distfiles/razin-20140310.zip
 
 # ebuild /your/private/o.../python-sage-flint-20140310.ebuild manifest
 
 # emerge dev-python/python-sage-flint
 
 
Without portage:
 # python2 ./setup.py install
 
 if sage include not found, read comments in setup.py, then
 
 # MY_SAGE_IS_HERE=... EPREFIX=... python2 ./setup.py install


Two files are installed: flint_sage.so and FLINT_...egg-info. With portage, documentation (this file) will be installed, too.


Test
====

Any of test_*.py script should say something like 'test passed'

Note that constructors have usually two or more forms.


FAQ
===

Q1. Why sage library is required?
A1. Because mpz_t number need to be converted to/from a Python int, and plain Python does not support this. Therefore some Python wrapper for GMP library like gmpy, pycddlib or Sage required.

Q1. Your binding to fmpq_mat is ugly
     f=flint_sage.fmpq_mat( (Integer(1), flint_sage.fmpz_mat(s)) )
A1. No, my binding to fmpz_mat and fmpq_mat is beautiful
     mZ=flint_sage.fmpz_mat( m )
     mQ=flint_sage.fmpq_mat( (Integer(1), mZ) )
    Compare with numpy array constructor
     a=numpy.resize( numpy.array( [], dtype=None ), 10 )

Q2. The .zip file contains whole lot of everything, but no documentation for your Python package. Where do I find useful information about what functions are available and how to call them?
A3. Ha, you just answered your question yourself. .py files (such as test_*.py and benchmark*.py) are samples/demo/test and .cout are captured output of relevant .py files (for instance benchmark_solve_right.cout is what benchmark_solve_right.py output on my desktop).
